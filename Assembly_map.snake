
# ---- Assembly ----------------------------------------------------------------

# Assemble with MegaHIT
rule megahit:
    input:   left=lambda w:R1[w["group"]],
             right=lambda w:R2[w["group"]],
             sample_processing= IN+"/quality_done"
    output:  "{group}/contigs/contigs.fa"
    params:  left=lambda w: ",".join(R1[w["group"]]),
             right=lambda w: ",".join(R2[w["group"]]),
             dir="{group}/assembly",
             mem=MAX_MEM_PERCENT,
             Additional_params=ASSEMBLER_PARAMS,
             assembly = "../assembly/final.contigs.fa"
    threads: 50
    resources:
        partition: HIGH_MEM_PARTITION
    log:     "{group}/assembly/assembly.log"
    message: "Assembling {wildcards.group} with MegaHIT"
    conda : CONDA_ENV + "/megahit.yaml"
    singularity : "docker://quay.io/annacprice/megahit:1.2.9"
    shell:   """
             megahit -1 {params.left} -2 {params.right} {params.Additional_params} -t {threads} -m {params.mem} --continue -o {params.dir} -f &> {log}
             ln -s {params.assembly} {output}
             """


# ---- bwa index file  -------------------------------------------

rule bwa_index:
    input:   "{path}/contigs.fa"
    output:  touch("{path}/index.done")
    log:     "{path}/index.log"
    params : 100000000000
    message: "Building bwa index for {input}"
    conda : CONDA_ENV + "/bwasamtools.yaml"
    singularity: "docker://quay.io/annacprice/bwasamtools:1.10"
    shell:   "bwa index -b {params} {input} &> {log}"

# ---- map reads to the assembly contigs--------------------------------------------------
rule bwa_mem_to_bam:
    input:   index="{group}/contigs/index.done",
             contigs="{group}/contigs/contigs.fa",
             left=lambda w:replace_extensions(SAMPLE_READS[w.sample][0],FILTER), right=lambda w:replace_extensions(SAMPLE_READS[w.sample][1],FILTER)
    output:  "{group}/map/{sample}_mapped_sorted.bam"
    threads: 10
    log:     "{group}/map/{sample}_map.log"
    message: "bwa mem mapping followed by samtool sorting for {input}"
    conda : CONDA_ENV + "/bwasamtools.yaml"
    singularity: "docker://quay.io/annacprice/bwasamtools:1.10"
    shell:   "bwa mem -t {threads} {input.contigs} {input.left} {input.right} 2>{log} | samtools view  -b -F 4 -@{threads} - | samtools sort -@{threads} - > {output}"
