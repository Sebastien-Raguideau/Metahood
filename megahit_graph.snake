from Bio.SeqIO.FastaIO import SimpleFastaParser as SFP

def get_kmer_length(wildcards):
    _=open(checkpoints.contig_folder.get(group=wildcards.group).output[0]) # just a line to ask reevaluation after contigs.fa have been created 
    kmer_length=next(SFP(open(wildcards.group+"/contigs/contigs.fa")))[0].split("_")[0][1:]
    return kmer_length

rule create_fastg:
	input : "{group}/contigs/contigs.fa"
	output: "{group}/graph/contigs.fastg"
	log : "{group}/graph/fastg.log"
	params: lambda w:get_kmer_length(w)
	shell : "megahit_toolkit contig2fastg {params} {input} > {output} 2>{log}"
		
rule create_gfa:
	input: "{file}.fastg"
	output: temp("{file}_bad_name.gfa")
	log : "{file}.log"
	shell : "Bandage reduce {input} {output} 2>{log}"

rule rename_gfa:
	input: gfa="{group}/graph/contigs_bad_name.gfa",
		   fa="{group}/contigs/contigs.fa"
	output: "{group}/graph/contigs.gfa"
	shell : "{SCRIPTS}/Rename_gfa.py {input.gfa} {input.fa} {output}"


# nohup Rename_gfa.py Graph/Assembly.gfa Assembly/final.contigs.fa >log 2>&1 & 
# rm Graph/Assembly.fastg

# cat ../Annotation/Contigs_F500_C10K_Intl1_selected_33.tsv |awk 'BEGIN { ORS="\t";OFS = "_" }{split($1,a,"_")}{print a[1], a[2]}' >List_integron_loose.tsv
# cat  Annotation/Contigs_F500_C10K_CARD_CPID_33.tsv |awk 'BEGIN { ORS="\t";OFS = "_" }{split($1,a,"_")}{print a[1], a[2]}' >List_AMR_loose.tsv

# cat  ../Annotation/Contigs_F500_CARD_selected.tsv |awk 'BEGIN { ORS="\t";OFS = "_" }{split($1,a,"_")}{print a[1], a[2]}' >List_AMR.tsv
# cat  ../Annotation/12_seq_annotation_Megablast.tsv | grep -v "#" |awk 'BEGIN {OFS = "_" }{split($2,a,"_")}{print a[1], a[2]}' | awk 'BEGIN {ORS="\t"}{split($1,a,"|")}{print a[2]}'>>List_AMR.tsv



# nohup Create_subgraph.py List_AMR.tsv Assembly.gfa -o AMR_reduced.gfa > log 2>&1 &
# Build_ORF_graph.py ../Annotation/Contigs_F500.bed2 AMR_reduced.gfa


